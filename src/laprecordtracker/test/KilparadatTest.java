package laprecordtracker.test;
// Generated by ComTest BEGIN
import java.io.File;
import laprecordtracker.*;
import java.util.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.04.14 14:57:50 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KilparadatTest {



  // Generated by ComTest BEGIN
  /** 
   * testLueTiedostosta52 
   * @throws SailoException when error
   */
  @Test
  public void testLueTiedostosta52() throws SailoException {    // Kilparadat: 52
    Kilparadat kilparadat = new Kilparadat(); 
    Kilparata ahven21 = new Kilparata(); ahven21.taytaKilparataTiedot(2); 
    Kilparata ahven11 = new Kilparata(); ahven11.taytaKilparataTiedot(1); 
    Kilparata ahven22 = new Kilparata(); ahven22.taytaKilparataTiedot(2); 
    Kilparata ahven12 = new Kilparata(); ahven12.taytaKilparataTiedot(1); 
    Kilparata ahven23 = new Kilparata(); ahven23.taytaKilparataTiedot(2); 
    String tiedNimi = "testiRadat"; 
    File ftied = new File(tiedNimi + "/kilparadat.dat"); 
    ftied.delete(); 
    try {
    kilparadat.lueTiedostosta(tiedNimi); 
    fail("Kilparadat: 64 Did not throw SailoException");
    } catch(SailoException _e_){ _e_.getMessage(); }
    kilparadat.lisaa(ahven21); 
    kilparadat.lisaa(ahven11); 
    kilparadat.lisaa(ahven22); 
    kilparadat.lisaa(ahven12); 
    kilparadat.lisaa(ahven23); 
    kilparadat.tallenna(tiedNimi); 
    kilparadat = new Kilparadat(); 
    kilparadat.lueTiedostosta(tiedNimi); 
    Iterator<Kilparata> i = kilparadat.iterator(); 
    assertEquals("From: Kilparadat line: 74", ahven21.toString(), i.next().toString()); 
    assertEquals("From: Kilparadat line: 75", ahven11.toString(), i.next().toString()); 
    assertEquals("From: Kilparadat line: 76", ahven22.toString(), i.next().toString()); 
    assertEquals("From: Kilparadat line: 77", ahven12.toString(), i.next().toString()); 
    assertEquals("From: Kilparadat line: 78", ahven23.toString(), i.next().toString()); 
    assertEquals("From: Kilparadat line: 79", false, i.hasNext()); 
    kilparadat.lisaa(ahven23); 
    kilparadat.tallenna(tiedNimi); 
    assertEquals("From: Kilparadat line: 82", true, ftied.delete()); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testIterator138 */
  @Test
  public void testIterator138() {    // Kilparadat: 138
    Kilparadat kilparadat = new Kilparadat(); 
    Kilparata kilpa21 = new Kilparata(2); kilparadat.lisaa(kilpa21); 
    Kilparata kilpa11 = new Kilparata(1); kilparadat.lisaa(kilpa11); 
    Kilparata kilpa22 = new Kilparata(2); kilparadat.lisaa(kilpa22); 
    Kilparata kilpa12 = new Kilparata(1); kilparadat.lisaa(kilpa12); 
    Kilparata kilpa23 = new Kilparata(2); kilparadat.lisaa(kilpa23); 
    Iterator<Kilparata> i2=kilparadat.iterator(); 
    assertEquals("From: Kilparadat line: 150", kilpa21, i2.next()); 
    assertEquals("From: Kilparadat line: 151", kilpa11, i2.next()); 
    assertEquals("From: Kilparadat line: 152", kilpa22, i2.next()); 
    assertEquals("From: Kilparadat line: 153", kilpa12, i2.next()); 
    assertEquals("From: Kilparadat line: 154", kilpa23, i2.next()); 
    try {
    assertEquals("From: Kilparadat line: 155", kilpa12, i2.next()); 
    fail("Kilparadat: 155 Did not throw NoSuchElementException");
    } catch(NoSuchElementException _e_){ _e_.getMessage(); }
    int n = 0; 
    int jnrot[] = { 2,1,2,1,2} ; 
    for (Kilparata kil : kilparadat) {
    assertEquals("From: Kilparadat line: 161", jnrot[n], kil.getKierrosaikaNro()); n++; 
    }
    assertEquals("From: Kilparadat line: 164", 5, n); 
  } // Generated by ComTest END


  // Generated by ComTest BEGIN
  /** testAnnaKilparadat179 */
  @Test
  public void testAnnaKilparadat179() {    // Kilparadat: 179
    Kilparadat kilparadat = new Kilparadat(); 
    Kilparata kilpa21 = new Kilparata(2); kilparadat.lisaa(kilpa21); 
    Kilparata kilpa11 = new Kilparata(1); kilparadat.lisaa(kilpa11); 
    Kilparata kilpa22 = new Kilparata(2); kilparadat.lisaa(kilpa22); 
    Kilparata kilpa12 = new Kilparata(1); kilparadat.lisaa(kilpa12); 
    Kilparata kilpa23 = new Kilparata(2); kilparadat.lisaa(kilpa23); 
    Kilparata kilpa51 = new Kilparata(5); kilparadat.lisaa(kilpa51); 
    List<Kilparata> loytyneet; 
    loytyneet = kilparadat.annaKilparadat(3); 
    assertEquals("From: Kilparadat line: 192", 0, loytyneet.size()); 
    loytyneet = kilparadat.annaKilparadat(1); 
    assertEquals("From: Kilparadat line: 194", 2, loytyneet.size()); 
    assertEquals("From: Kilparadat line: 195", true, loytyneet.get(0) == kilpa11); 
    assertEquals("From: Kilparadat line: 196", true, loytyneet.get(1) == kilpa12); 
    loytyneet = kilparadat.annaKilparadat(5); 
    assertEquals("From: Kilparadat line: 198", 1, loytyneet.size()); 
    assertEquals("From: Kilparadat line: 199", true, loytyneet.get(0) == kilpa51); 
  } // Generated by ComTest END
}