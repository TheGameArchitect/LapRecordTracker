package kanta.test;
// Generated by ComTest BEGIN
import kanta.*;
import static org.junit.Assert.*;
import org.junit.*;
// Generated by ComTest END

/**
 * Test class made by ComTest
 * @version 2023.05.12 16:13:17 // Generated by ComTest
 *
 */
@SuppressWarnings({ "all" })
public class KierrosaikaTarkistusTest {



  // Generated by ComTest BEGIN
  /** testTarkista18 */
  @Test
  public void testTarkista18() {    // KierrosaikaTarkistus: 18
    KierrosaikaTarkistus ajat = new KierrosaikaTarkistus(); 
    assertEquals("From: KierrosaikaTarkistus line: 21", "Aika on liian lyhyt. Kirjoita aika muodossa 00.00.000 tai 00:00:000.", ajat.tarkista("32")); 
    assertEquals("From: KierrosaikaTarkistus line: 22", "Aika on liian lyhyt. Kirjoita aika muodossa 00.00.000 tai 00:00:000.", ajat.tarkista("d")); 
    assertEquals("From: KierrosaikaTarkistus line: 23", "Liian monta merkkiä", ajat.tarkista("123:00:000")); 
    assertEquals("From: KierrosaikaTarkistus line: 24", "Saa sisältää vain numeroita, pisteitä ja kaksoispisteitä", ajat.tarkista("00:s2.323")); 
    assertEquals("From: KierrosaikaTarkistus line: 25", "Minuutit eivät saa mennä yli 59", ajat.tarkista("84:00:000")); 
    assertEquals("From: KierrosaikaTarkistus line: 26", "Sekunnit eivät voi mennä yli 59", ajat.tarkista("00.80.323")); 
    assertEquals("From: KierrosaikaTarkistus line: 27", "Sekunnit eivät voi mennä yli 59", ajat.tarkista("00:80:323")); 
    assertEquals("From: KierrosaikaTarkistus line: 28", "Väärä erotinmerkki", ajat.tarkista("000000000")); 
    assertEquals("From: KierrosaikaTarkistus line: 29", null, ajat.tarkista("00:00:000")); 
    assertEquals("From: KierrosaikaTarkistus line: 30", null, ajat.tarkista("00.00.000")); 
    assertEquals("From: KierrosaikaTarkistus line: 31", null, ajat.tarkista("59.59.999")); 
    assertEquals("From: KierrosaikaTarkistus line: 32", null, ajat.tarkista("32:45:423")); 
  } // Generated by ComTest END
}